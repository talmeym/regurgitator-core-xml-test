/* * Copyright (C) 2017 Miles Talmey. * Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT). */package uk.emarte.regurgitator.test;import uk.emarte.regurgitator.core.CreateParameterXmlLoader;import uk.emarte.regurgitator.core.RegurgitatorException;import org.junit.Test;import static uk.emarte.regurgitator.core.ConfigurationFile.loadFile;import static uk.emarte.regurgitator.test.CoreLoaderTestExpectations.*;public class CreateParameterXmlLoaderTest extends XmlLoaderTest {    public CreateParameterXmlLoaderTest() {        super(new CreateParameterXmlLoader());    }    @Test    public void testValue() throws Exception {        assertExpectation("classpath:/CreateParameter_value.xml", CreateParameter_value);    }    @Test    public void testFile() throws Exception {        assertExpectation("classpath:/CreateParameter_file.xml", CreateParameter_file);    }    @Test    public void testSource() throws Exception {        assertExpectation("classpath:/CreateParameter_source.xml", CreateParameter_source);    }    @Test    public void testSourceAndValue() throws Exception {        assertExpectation("classpath:/CreateParameter_sourceAndValue.xml", CreateParameter_sourceAndValue);    }    @Test    public void testSourceAndFile() throws Exception {        assertExpectation("classpath:/CreateParameter_sourceAndFile.xml", CreateParameter_sourceAndFile);    }    @Test    public void testProcessor() throws Exception {        assertExpectation("classpath:/CreateParameter_processor.xml", CreateParameter_processor);    }    @Test    public void testProcessorFlat() throws Exception {        assertExpectation("classpath:/CreateParameter_processorFlat.xml", CreateParameter_processorFlat);    }    @Test    public void testMultipleProcessors() throws Exception {        assertExpectation("classpath:/CreateParameter_multipleProcessors.xml", CreateParameter_multipleProcessors);    }    @Test    public void testMultipleProcessorsFlat() throws Exception {        assertExpectation("classpath:/CreateParameter_multipleProcessorsFlat.xml", CreateParameter_multipleProcessorsFlat);    }    @Test    public void testFullLoad() throws Exception {        loadFile("classpath:/CreateParameter_processorFlat.xml");    }    @Test(expected = RegurgitatorException.class)    public void testValueAndFileException() throws Exception {        loadFromFile("classpath:/CreateParameter_valueAndFile.xml");    }    @Test(expected = RegurgitatorException.class)    public void testNothingException() throws Exception {        loadFromFile("classpath:/CreateParameter_nothing.xml");    }    @Test(expected = RegurgitatorException.class)    public void testMissingFileException() throws Exception {        loadFromFile("classpath:/CreateParameter_missingFile.xml");    }}